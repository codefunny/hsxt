<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://code.alibabatech.com/schema/dubbo
					    http://code.alibabatech.com/schema/dubbo/dubbo.xsd
						http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/aop
            			http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-3.2.xsd
						http://www.springframework.org/schema/mvc
					    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<!-- 使Spring支持自动检测组件，如注解的Controller -->
	<context:component-scan base-package="com.gy.hsxt" />
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 引入配置文件 -->
	<bean id="hsPropertiesConfigurer" class="com.gy.hsi.ds.param.HsPropertiesConfigurer">
		<!-- disconf.properties 存放路径 -->
		<constructor-arg name="disconfFile"
			value="file:${user.dir}/conf/hsxt-tm/disconf.properties" />
		<!-- 本地配置文件[只有本地存在, 远程没有上传] -->
		<property name="locations">
			<list>
			</list>
		</property>
		<!-- 远程配置文件[远程存在, 将会同步到本地] -->
		<property name="remoteLocations">
			<list>
				<value>file:${user.dir}/conf/hsxt-tm/dubbo.properties</value>
				<value>file:${user.dir}/conf/hsxt-tm/jdbc.properties</value>
				<value>file:${user.dir}/conf/hsxt-tm/hsxt-tm.properties</value>
				<value>file:${user.dir}/conf/hsxt-tm/hsi-lc.properties</value>
				<value>file:${user.dir}/conf/hsxt-tm/redis.properties</value>
			</list>
		</property>
	</bean>

	<bean id="tmConfig" class="com.gy.hsxt.tm.disconf.TmConfig" scope="singleton">
		<property name="appNode" value="${system.instance.no}" />
		<property name="timeOut" value="${urgency_task.timeout}" />
	</bean>
	
	<bean id="lcsClient" class="com.gy.hsxt.lcs.client.LcsClient">
		<property name="redisUtil" ref="fixRedisUtil" />
		<property name="baseDataService" ref="baseDataService" />
	</bean>

	<import resource="classpath:spring/spring-datasource.xml" />
	<import resource="classpath:spring/spring-dubbo-provider.xml" />
	<import resource="classpath:spring/spring-dubbo-consumer.xml" />
	<import resource="classpath:spring/hsxt-redis-spring.xml" />
	
</beans>