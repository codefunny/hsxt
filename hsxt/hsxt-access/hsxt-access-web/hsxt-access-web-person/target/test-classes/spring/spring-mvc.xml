<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:context="http://www.springframework.org/schema/context"
 xmlns:p="http://www.springframework.org/schema/p"
 xmlns:mvc="http://www.springframework.org/schema/mvc"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">
      
	<!-- 启动注解驱动的Spring MVC功能，注册请求url和注解POJO类方法的映射-->  
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true"> 
	        <bean class="com.gy.hsxt.access.web.person.utils.UTF8StringHttpMessageConverter"/> 
	    </mvc:message-converters> 
	</mvc:annotation-driven> 
	<mvc:default-servlet-handler/>
	
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/img/**" location="/img/" />
	<mvc:resources mapping="tld/**" location="tld/" />
	<mvc:resources mapping="/upload/**" location="/upload/" />
	
	
	<!-- 因为spring的context是父子容器，所以会产生冲突，Controller会先进行扫描装配， 而此时的Service还没有进行事务的增强处理，得到的将是原样的Service（没有经过事务加强处理，故而没有事务处理能力） 
		最后才是applicationContext.xml中的扫描配置进行事务处理 -->
	<!-- <context:component-scan base-package="com.gy.hsxt.*">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan> -->
	<!-- 属性配置 -->
	<!-- <bean id="propertyConfigurer"
		class="com.gy.hsi.lc.common.config.PropertyConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
		    <list>
		        <value>file:${user.dir}/logcenter/hsi-lc-config.properties</value>
			  	<value>file:${user.dir}/logcenter/log4j.properties</value>  
			</list>
		</property>
	</bean>   -->
	
	<!-- 启动包扫描功能，以便注册带有@Controller、@Service、@repository、@Component等注解的类成为spring的bean -->  
    <context:component-scan base-package="com.gy.hsxt.*" />   
	
	<!-- jsp解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="1" />
		<property name="prefix" value="/WEB-INF/page/" />
		<property name="suffix" value=".jsp" />
		<property name="viewClass"
			value="org.springframework.web.servlet.view.InternalResourceView" />
	</bean>
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	

	 
	
	
	<!-- 避免IE在ajax请求时，返回json出现下载 -->
	<bean id="jsonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
		 
	<!-- spring json --> 
	 <bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonHttpMessageConverter" />
			</list>
		</property>
	</bean> 
	
	<!-- <bean id="propertyConfigurer"
		class="com.gy.hsi.lc.common.config.PropertyConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
		    <list>
				<value>file:${user.dir}/config/logcenter/hsi-lc-config.properties</value>
			  	<value>file:${user.dir}/config/logcenter/log4j.properties</value>  
		        <value>file:${user.dir}/conf/hsi-lc-config.properties</value>
			  	<value>file:${user.dir}/conf/log4j.properties</value> 
			</list>
		</property>
	</bean> -->
	 
    <!-- <context:property-placeholder location="file:${user.dir}/conf/hsxt-ac-config.properties" ignore-unresolvable="true"/> -->

	 

	<!-- <import resource="classpath:spring/spring-dubbo-consumer.xml" /> -->
	
   

</beans>
 