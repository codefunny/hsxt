<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <!-- 因为spring的context是父子容器，所以会产生冲突，Controller会先进行扫描装配， 而此时的Service还没有进行事务的增强处理，得到的将是原样的Service（没有经过事务加强处理，故而没有事务处理能力）
        最后才是applicationContext.xml中的扫描配置进行事务处理 -->
    <context:component-scan base-package="com.gy.hsxt.gpf.um.*">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!-- 引入配置文件 -->
    <bean id="propertyConfigurer" class="com.gy.hsi.ds.param.HsPropertiesConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="ignoreResourceNotFound" value="true" />
		<!-- 本地配置文件[只有本地存在, 远程没有上传] -->
		<property name="locations">
			<list>
				<value>file:${user.dir}/conf/hsxt-gpf-um/jdbc.properties</value>
                <value>file:${user.dir}/conf/hsxt-gpf-um/dubbo.properties</value>
                <value>file:${user.dir}/conf/hsxt-gpf-um/hsxt-gpf-um.properties</value>
                <value>file:${user.dir}/conf/hsxt-gpf-um/redis.properties</value>
			</list>
		</property>
	</bean>
    <import resource="classpath:spring/spring-datasource.xml"/>
    <import resource="classpath:spring/spring-dubbo-provider.xml"/>
    <import resource="classpath:spring/spring-dubbo-consumer.xml"/>
    <import resource="classpath:spring/spring-servlet.xml"/>
    <import resource="classpath:spring/spring-redis.xml"/>

</beans>
 