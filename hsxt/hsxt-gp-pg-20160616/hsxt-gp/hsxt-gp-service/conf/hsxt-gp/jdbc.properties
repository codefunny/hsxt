##====================== jdbc settings ============================#
jdbc.url=jdbc\:mysql\://192.168.229.26:3306/GP?useUnicode\=true&zeroDateTimeBehavior\=convertToNull&characterEncoding\=utf-8
jdbc.username=DBGP01
jdbc.password=DBGP01
jdbc.driverClassName=com.mysql.jdbc.Driver
#连接池初始化数量
jdbc.druid.initialSize=10
#最小空闲连接数
jdbc.druid.minIdle=5
#最大连接池数量-
jdbc.druid.maxActive=500
#配置获取连接等待超时的时间 
jdbc.druid.maxWait=60000
# 超过时间限制是否回收 当连接超过超时时间后后会强制进行回收,并会 输出异常日志。此功能会影响性能。建议正式环境不要使用-->
#removeAbandoned = true
#超过时间限制多长；
#removeAbandonedTimeout = 180

# 申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能 
jdbc.druid.testOnBorrow=false
# 归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能  -->
jdbc.druid.testOnReturn=false
# 申请连接的时候检测 
jdbc.druid.testWhileIdle=true
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
jdbc.druid.timeBetweenEvictionRunsMillis=30000
# 配置一个连接在池中最小生存的时间，单位是毫秒 -->
jdbc.druid.minEvictableIdleTimeMillis=300000
# 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭  -->
#打开PSCache，并且指定每个连接上PSCache的大小
jdbc.druid.poolPreparedStatements=false
jdbc.druid.maxPoolPreparedStatementPerConnectionSize=-1
# 用来检测连接是否有效的sql，要求是一个查询语句
jdbc.druid.validationQuery=SELECT 1 FROM DUAL
# 配置监控统计拦截的filters 
jdbc.druid.filters=stat