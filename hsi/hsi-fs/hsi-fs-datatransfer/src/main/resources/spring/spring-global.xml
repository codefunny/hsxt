<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
            http://www.springframework.org/schema/jdbc
            http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- 因为spring的context是父子容器,所以会产生冲突,Controller会先进行扫描装配， 而此时的Service还没有进行事务的增强处理, 
		得到的将是原样的Service(没有经过事务加强处理，故而没有事务处理能力), 最后才是applicationContext.xml中的扫描配置进行事务处理 -->
	<context:component-scan base-package="com.gy.hsxt.*,com.gy.hsi.*">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<!-- 本地配置文件[只有配置到本地] -->
		<property name="locations">
			<list>
				<value>file:${user.dir}/conf/fs/bs-jdbc.properties</value>
				<value>file:${user.dir}/conf/fs/fs-jdbc.properties</value>
				<value>file:${user.dir}/conf/fs/uc-jdbc.properties</value>
				<value>file:${user.dir}/conf/fs/ws-jdbc.properties</value>
				<value>file:${user.dir}/conf/fs/system.properties</value>
			</list>
		</property>
	</bean>

	<bean id="systemConfig" class="com.gy.hsi.fs.common.bean.SystemConfig">
		<property name="tfsAddress" value="${system.tfs.address}" />
		<property name="downloadLocalpath" value="${system.filedownload.localpath}" />

		<property name="ftpIp" value="${system.ftp.ip}" />
		<property name="ftpPort" value="${system.ftp.port}" />
		<property name="ftpUsername" value="${system.ftp.username}" />
		<property name="ftpPassword" value="${system.ftp.password}" />
		<property name="ftpRootDir" value="${system.ftp.rootdir}" />

		<property name="maxPoolSize" value="${system.filedownload.maxpoolsize}" />
	</bean>
	
	<!-- 上传&下载线程池 -->
	<bean id="uploadExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="${system.filedownload.maxpoolsize}" />
		<property name="maxPoolSize" value="${system.filedownload.maxpoolsize}" />
	</bean>
	
	<import resource="classpath*:spring/fs-spring-datasource.xml" />
	<import resource="classpath*:spring/bs-spring-datasource.xml" />
	<import resource="classpath*:spring/uc-spring-datasource.xml" />
	<import resource="classpath*:spring/ws-spring-datasource.xml" />
	<import resource="classpath*:spring/spring-tfs.xml" />

</beans>
 