<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    		http://www.springframework.org/schema/context 
    		http://www.springframework.org/schema/context/spring-context-3.2.xsd
   			http://www.springframework.org/schema/tx  
   			http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<context:annotation-config />
	<context:component-scan base-package="com.gy.hsi.fs.server">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 属性配置 -->
	<bean id="propertyConfigurer" class="com.gy.hsi.ds.param.HsPropertiesConfigurer">
		<!-- disconf.properties存放路径 -->
		<constructor-arg name="disconfFile"
			value="file:${user.dir}/conf/hsi-fs/disconf.properties" />

		<!-- 本地配置文件[只有本地存在, 远程没有上传] -->
		<property name="locations">
			<list></list>
		</property>

		<!-- 远程配置文件[远程存在, 将会同步到本地] -->
		<property name="remoteLocations">
			<list>
				<value>file:${user.dir}/conf/hsi-fs/hsi-fs.properties</value>
				<value>file:${user.dir}/conf/hsi-fs/jdbc.properties</value>
				<value>file:${user.dir}/conf/hsi-fs/dubbo.properties</value>
				<value>file:${user.dir}/conf/hsi-fs/log4j.xml</value>
			</list>
		</property>
	</bean>

	<!-- 数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
		<property name="testOnReturn" value="${jdbc.testOnReturn}" />
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
		<property name="logAbandoned" value="${jdbc.logAbandoned}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
	</bean>

	<!-- 在Dao实现类中被引用 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis/mybatis.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="mapperDoor"
		class="com.gy.hsi.fs.server.common.framework.mybatis.MapperDoor">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<!-- 数据库事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 自动开启事务注解驱动 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		mode="proxy" proxy-target-class="false" />

	<!-- 导入其他spring配置文件 -->
	<import resource="classpath*:spring/spring-tfs.xml" />
	<import resource="classpath*:spring/spring-task.xml" />
	<import resource="classpath*:spring/spring-dubbo-consumer.xml" />
	<import resource="classpath*:spring/spring-dubbo-provider.xml" />

</beans>