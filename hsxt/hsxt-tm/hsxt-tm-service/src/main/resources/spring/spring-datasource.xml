<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
            http://www.springframework.org/schema/jdbc
            http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 数据库基本信息配置 -->
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 初始化连接数量 -->
		<property name="initialSize" value="${jdbc.druid.initialSize}" />
		<!-- 最大空闲连接数 -->
        <property name="maxIdle" value="${jdbc.druid.maxIdle}" />
		<!-- 最小空闲连接数 -->
		<property name="minIdle" value="${jdbc.druid.minIdle}" />
		<!-- 最大并发连接数 -->
		<property name="maxActive" value="${jdbc.druid.maxActive}" />
		<!-- 配置获取连接等待超时的时间 --> 
		<property name="maxWait" value="${jdbc.druid.maxWait}" />
		<!-- 超过时间限制是否回收 -->
        <property name="removeAbandoned" value="${jdbc.druid.removeAbandoned}" />
        <!-- 超过时间限制多长； -->
        <property name="removeAbandonedTimeout" value="${jdbc.druid.removeAbandonedTimeout}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.druid.timeBetweenEvictionRunsMillis}" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${jdbc.druid.minEvictableIdleTimeMillis}" />
		<!-- 用来检测连接是否有效的sql，要求是一个查询语句-->
		<property name="validationQuery" value="${jdbc.druid.validationQuery}" />
		<!-- 申请连接的时候检测 -->
		<property name="testWhileIdle" value="${jdbc.druid.testWhileIdle}" />
		<!-- 申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能 -->
		<property name="testOnBorrow" value="${jdbc.druid.testOnBorrow}" />
		<!-- 归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能  -->
		<property name="testOnReturn" value="${jdbc.druid.testOnReturn}" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="${jdbc.druid.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="${jdbc.druid.maxPoolPreparedStatementPerConnectionSize}"/>
		<!--属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：                
		                监控统计用的filter:stat
		                日志用的filter:log4j
		               防御SQL注入的filter:wall -->
        <property name="filters" value="${jdbc.druid.filters}" />  
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

    <!-- 可通过注解控制事务 -->
	<tx:annotation-driven />

	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:spring/mybatis-config.xml"/>
		<property name="mapperLocations" value="classpath*:com/gy/hsxt/tm/mapper/mapping/*Mapper.xml" />
		<property name="typeAliasesPackage" value="com.gy.hsxt.tm.bean" />
	</bean>
	<!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.gy.hsxt.tm.mapper"/>
	</bean>

 </beans>